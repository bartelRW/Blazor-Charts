@page "/"
@implements IDisposable

<PageTitle>Home</PageTitle>

<div class="row mb-4">
    <h4>Live Data</h4>
    <div class="col">
        <div class="card bg-light shadow">
            <div class="card-body">
                <div class="row">
                    <div class="col">
                        @if (ChartData is not null && ChartData.Count > 0)
                        {
                            <!-- Chartconfig-Component -->
                            <CascadingValue Name="ChartData" Value="ChartData">
                                <LineChart @key="UpdateChart" />
                            </CascadingValue>
                        }
                        else
                        {
                            <div><i class="bi bi-database-fill-x"></i> No data found</div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code{
    private Timer? Timer;
    private List<int> ChartData { get; set; } = new();
    private bool UpdateChart { get; set; } = new();

    protected override void OnInitialized()
    {
        // Initialize the timer to update chart data every 3 seconds
        Timer = new(
            e =>
            {
                InvokeAsync(() =>
                {
                    // Generate random data for the chart
                    ChartData = Enumerable.Range(1, 20).Select(_ => Random.Shared.Next(10, 100)).ToList();
                    //Force Chartcomponent to reload
                    UpdateChart = !UpdateChart;
                    StateHasChanged();
                });
            },
            null,
            TimeSpan.Zero,
            TimeSpan.FromSeconds(3)
        );
    }

    public void Dispose() => Timer?.Dispose();
}